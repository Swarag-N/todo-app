{"version":3,"sources":["reducer/todo.reducer.js","reducer/localStorage.reducer.js","context/todos.context.js","hooks/useInputState.js","material-todo/TodoEditForm.js","hooks/useToggle.js","material-todo/TodoItem.js","material-todo/TodoList.js","material-todo/TodoForm.js","material-todo/Todo.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","action","type","id","uuidv4","text","completed","filter","todo","map","useLocalStorageReducer","key","defaulValue","useReducer","value","JSON","parse","window","localStorage","getItem","String","e","dispatch","useEffect","setItem","stringify","TodoContext","createContext","DispatchContext","defaultTodos","TodosProvider","props","TodoReducer","todos","Provider","children","initialValue","useState","setValue","target","TodoEditForm","toggleEditing","useContext","useInputState","handleChange","reset","onSubmit","preventDefault","style","width","marginLeft","TextField","onChange","label","fullWidth","autoFocus","useToggle","setState","toggle","memo","isEditing","ListItem","ListItemIcon","onClick","Checkbox","icon","checkedIcon","color","checked","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","edge","aria-label","TodoList","length","Paper","List","i","Divider","TodoForm","margin","padding","Todo","height","backgroundColor","elevation","AppBar","position","Toolbar","Typography","variant","Grid","container","justify","marginTop","item","xs","sm","md","lg","App","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.18626ea9.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            return [...state, { id: uuidv4(), text: action.text, completed: false }];\r\n        case \"REMOVE\":\r\n            return state.filter(todo => todo.id !== action.id);\r\n        case \"TOGGLE\":\r\n            return state.map(todo =>todo.id === action.id ? { ...todo, completed: !todo.completed } : todo);\r\n        case \"EDIT\":\r\n            return state.map(todo =>\r\n                todo.id === action.id ? { ...todo, text: action.text } : todo);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default reducer;","import { useReducer, useEffect } from 'react'\r\n\r\nfunction useLocalStorageReducer(key,defaulValue,reducer){\r\n\r\n    const [state,dispatch]= useReducer(reducer,defaulValue,()=>{\r\n        let value;\r\n        try{\r\n            value=JSON.parse(window.localStorage.getItem(key)||String(defaulValue))\r\n        }catch(e){\r\n            value=defaulValue\r\n        }\r\n        return value;\r\n    })\r\n    \r\n    useEffect(()=>{\r\n        window.localStorage.setItem(key,JSON.stringify(state));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[state]);\r\n    return [state,dispatch]\r\n}\r\nexport default useLocalStorageReducer;","import React,{createContext} from 'react'\r\n\r\nimport TodoReducer from '../reducer/todo.reducer'\r\nimport useLocalStorageReducer from '../reducer/localStorage.reducer'\r\n\r\nexport const TodoContext = createContext()\r\nexport const DispatchContext = createContext() \r\n\r\nconst defaultTodos = [\r\n    {text:\"Star This Repo ðŸ˜…\",id:213123,completed:false},\r\n    {text:\"Clone This Repo ðŸ“•\",id:217823,completed:false},\r\n    {text:\"Impoove This Repo\",id:743123,completed:true},\r\n]\r\n\r\nexport function TodosProvider (props){\r\n    const [todos,dispatch] = useLocalStorageReducer(\"todos\",defaultTodos,TodoReducer)\r\n\r\n    return (\r\n        <TodoContext.Provider value={todos}>\r\n            <DispatchContext.Provider value={dispatch}>\r\n                {props.children}\r\n            </DispatchContext.Provider>\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n","import {useState} from 'react'\r\nexport default initialValue =>{\r\n    const [value,setValue]=useState(initialValue);\r\n    const handleChange = (e)=>{\r\n        setValue(e.target.value)\r\n    }\r\n    const reset = ()=>{\r\n        setValue(\"\")\r\n    }\r\n    return [value,handleChange,reset]\r\n}","import React,{useContext} from 'react'\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {DispatchContext} from '../context/todos.context'\r\n\r\nimport useInputState from '../hooks/useInputState'\r\n\r\nfunction TodoEditForm({toggleEditing,id,text}){\r\n    const dispatch = useContext(DispatchContext)\r\n    const  [value,handleChange,reset] = useInputState(text)\r\n    return <form onSubmit={(e)=>{\r\n        e.preventDefault();\r\n        dispatch({type:\"EDIT\",id:id,text:value})\r\n        reset()\r\n        toggleEditing()\r\n    }}\r\n    style={{width:\"75%\",marginLeft:\"1rem\"}}\r\n    >\r\n        <TextField\r\n            value={value}\r\n            onChange={handleChange}\r\n            label=\"Edit\" \r\n            fullWidth\r\n            autoFocus\r\n            />\r\n    </form>\r\n}\r\n\r\nexport default TodoEditForm;","import { useState } from 'react'\r\n\r\nfunction useToggle (initialValue = false){\r\n    const [state,setState]= useState(initialValue)\r\n    const toggle = ()=>{\r\n        setState(!state)\r\n    };\r\n    return [state,toggle]\r\n}\r\n\r\nexport default useToggle;","import React,{useContext,memo} from 'react'\r\n\r\nimport AssignmentTurnedInOutlinedIcon from '@material-ui/icons/AssignmentTurnedInOutlined';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\nimport TodoEditForm from './TodoEditForm'\r\nimport useToggle from '../hooks/useToggle'\r\n\r\nimport {DispatchContext} from '../context/todos.context'\r\n\r\nfunction TodoItem({id,text,completed}){\r\n    const dispatch = useContext(DispatchContext)\r\n    const [isEditing,toggleEditing] = useToggle(false);\r\n    return(\r\n        <ListItem>\r\n            {isEditing?\r\n                <TodoEditForm id={id} toggleEditing={toggleEditing} text={text}/>:\r\n                <>\r\n                    <ListItemIcon onClick={()=>dispatch({type:\"TOGGLE\", id:id})}>\r\n                        <Checkbox icon={<AssignmentTurnedInOutlinedIcon />} checkedIcon={<AssignmentTurnedInIcon />} color=\"primary\" checked={completed}/>\r\n                    </ListItemIcon>\r\n                    <ListItemText key={id} style={{textDecoration:completed?\"line-through\":\"none\"}}>\r\n                        {text}\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"edit\" onClick={toggleEditing}>\r\n                                <EditIcon />\r\n                            </IconButton>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>dispatch({type:\"REMOVE\",id:id})}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </>\r\n            }\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default memo(TodoItem);","import React,{useContext} from 'react'\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport TodoItem from './TodoItem'\r\n\r\nimport {TodoContext} from '../context/todos.context'\r\n\r\nfunction TodoList(){\r\n    const todos = useContext(TodoContext)\r\n    if (todos.length>0){\r\n    return(\r\n    <Paper>\r\n        <List>\r\n            {todos.map((todo,i)=>(\r\n                <div key={todo.id}>\r\n                    <TodoItem {...todo} key={todo.id}/>\r\n                    {i < todos.length-1 && <Divider/>}\r\n                </div >\r\n        ))}\r\n        </List>\r\n    </Paper>\r\n    )}\r\n    return null\r\n}\r\n\r\nexport default TodoList","import React,{useContext} from 'react'\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport useInputState from '../hooks/useInputState'\r\n\r\nimport {DispatchContext} from '../context/todos.context'\r\n\r\nfunction TodoForm(){\r\n    const  [value,handleChange,reset] = useInputState(\"\")\r\n    const dispatch = useContext(DispatchContext)\r\n\r\n    return(\r\n        <Paper style={{margin:\"1rem 0\", padding:\"0 1rem\"}} >\r\n            <form onSubmit={(e)=>{\r\n                e.preventDefault();\r\n                dispatch({type:\"ADD\",text:value})\r\n                reset()\r\n            }}>\r\n            <TextField \r\n                label=\"Add a New Todo\" \r\n                margin=\"normal\"\r\n                fullWidth \r\n                value={value} \r\n                onChange={handleChange}/>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default TodoForm","import React from 'react'\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {TodosProvider} from '../context/todos.context'\r\n\r\nimport TodoList from './TodoList'\r\nimport TodoForm from './TodoForm'\r\n\r\n\r\nfunction Todo(){\r\n    return(\r\n        <Paper\r\n            style={{\r\n                padding:0,\r\n                margin:0,\r\n                height:\"100vh\",\r\n                backgroundColor:\"#fafafa\"\r\n            }}\r\n            elevation={0}\r\n            >\r\n            <AppBar position=\"static\" >\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\">Todo App</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Grid container  justify=\"center\"  style={{marginTop:\"1.5rem\"}}>\r\n                <Grid item xs={11} sm={11} md={8} lg={4}>\r\n                    <TodosProvider>\r\n                        <TodoForm/>\r\n                        <TodoList/>\r\n                    </TodosProvider>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Todo","import React from 'react';\nimport Todo from './material-todo/Todo'\n// import logo from './logo.svg';\n// import './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}